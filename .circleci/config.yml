version: 2.1
orbs:
  heroku: circleci/heroku@2.0
jobs:
  build:
    docker:
      - image: cimg/deploy:2023.04-node
        environment:
          DOCKER_HOST: tcp://localhost:2375
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
      - run:
          name: Run proxy
          command: |
            docker pull owasp/zap2docker-stable
            docker run --name zap -u zap -p 8080:8080 -i owasp/zap2docker-stable zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.disablekey=true -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true
          background: true
      - run:
          name: Setup Dependencies
          command: npm install
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: Run Test and Coverage
          command: |
            ./cc-test-reporter before-build
            npm run test:coverage -- --coverage
            ./cc-test-reporter after-build --exit-code $?
      - run:
          command: heroku container:login
          name: Login to Heroku Docker image registry
      - run:
          name: Build Docker image to Heroku
          command: |-
            #!/bin/bash

            PARAM_HEROKU_API_KEY="${!PARAM_HEROKU_API_KEY}"

            if [ "$PARAM_RECURSIVE" == "1" ];then
              set -- "$@" --resursive
            fi

            set -x
            heroku container:push web --app user-info
            set +x
      - run:
          name: Push Docker image to Heroku
          command: |-
            #!/bin/bash

            heroku container:release -a "$PARAM_APP_NAME" "$PARAM_PROCESS_TYPES"
      - run:
            name: Build and push Docker image to Heroku
            command: |
              sudo curl https://cli-assets.heroku.com/install.sh | sh
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
            # HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push web --app user-info
            # HEROKU_API_KEY=${HEROKU_TOKEN}heroku container:release web --app user-info
      - store_artifacts:
          path: coverage